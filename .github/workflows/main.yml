name: Lint and Build Code Base

on:
  push:
    branches: [dev, main]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, dev, release-*]
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 19.x]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
          cache-dependency-path: ./package-lock.json
            
      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run lint
      - name: Prettier - server
        run: npm run prettier
      - name: All went well!
        run: echo Success
    env:
      CI: true
  
  build:
    name: Build Code Base
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [lint]
    strategy:
      matrix:
        node-version: [18.x, 19.x]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
            
      - name: Install Dependencies
        run: npm ci
      - name: Build Dependencies
        run: npm run build
        env:
          NODE_ENV: production
